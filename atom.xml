<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-30T02:47:40.720Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/08/30/hello-world/"/>
    <id>http://example.com/2021/08/30/hello-world/</id>
    <published>2021-08-30T02:47:40.720Z</published>
    <updated>2021-08-30T02:47:40.720Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nginx&amp;wordpress&amp;php-fpm&amp;https安装配置指南</title>
    <link href="http://example.com/2021/08/27/nginxwordpressphp-fpmhttps%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2021/08/27/nginxwordpressphp-fpmhttps%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</id>
    <published>2021-08-27T08:28:53.000Z</published>
    <updated>2021-08-30T03:39:57.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装相关软件"><a href="#安装相关软件" class="headerlink" title="安装相关软件"></a>安装相关软件</h2><ul><li>  系统环境 ubuntu18.04</li><li>  安装nginx php php-fpm php-mysql</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx php7.2 php7.2-fpm php7.2-mysql</span><br><span class="line"></span><br><span class="line">#可能存在端口占用,如apache2则先关闭服务</span><br><span class="line"># systemctl stop apache2</span><br><span class="line">systemctl start nginx.service</span><br><span class="line"></span><br><span class="line"># 查看socket文件</span><br><span class="line">cat /etc/php/7.2/fpm/pool.d/www.conf grep  &#x27;listen = &#x27;</span><br><span class="line"># 默认 listen = /run/php/php7.2-fpm.sock</span><br></pre></td></tr></table></figure><h3 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h3><p><a href="https://cn.wordpress.org/latest-zh_CN.tar.gz">https://cn.wordpress.org/latest-zh_CN.tar.gz</a></p><p>下载</p><p>tar zxvf latest-zh_CN.tar.gz -C /var/html www</p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/sites-available/www.sczhaoqi.com</span><br><span class="line"></span><br><span class="line">## 开始</span><br><span class="line">server &#123;</span><br><span class="line">          listen 80;</span><br><span class="line">          server_name sczhaoqi.com www.sczhaoqi.com;</span><br><span class="line">          rewrite ^(.*)$ https://$host$1 permanent;</span><br><span class="line">        &#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 443;</span><br><span class="line">        root /var/www/html;</span><br><span class="line">        server_name sczhaoqi.com www.sczhaoqi.com; #填写绑定证书的域名</span><br><span class="line">ssl on;</span><br><span class="line">ssl_certificate 1_sczhaoqi.com_bundle.crt;</span><br><span class="line">ssl_certificate_key 2_sczhaoqi.com.key;</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">        location /loc &#123;</span><br><span class="line">          proxy_pass http://localhost:8080/loc;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /favicon.ico &#123;</span><br><span class="line">                log_not_found off;</span><br><span class="line">                access_log off;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location = /robots.txt &#123;</span><br><span class="line">                allow all;</span><br><span class="line">                log_not_found off;</span><br><span class="line">                access_log off;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location / &#123;</span><br><span class="line">                # This is cool because no php is touched for static content.</span><br><span class="line">                # include the &quot;?$args&quot; part so non-default permalinks doesn&#x27;t break when using query string</span><br><span class="line">                try_files $uri $uri/ /index.php?$args;</span><br><span class="line">            if (-f $request_filename/index.html)&#123;</span><br><span class="line">                rewrite (.*) $1/index.html break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (-f $request_filename/index.php)&#123;</span><br><span class="line">                rewrite (.*) $1/index.php;</span><br><span class="line">            &#125;</span><br><span class="line">            if (!-f $request_filename)&#123;</span><br><span class="line">                rewrite (.*) /index.php;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">                #NOTE: You should have &quot;cgi.fix_pathinfo = 0;&quot; in php.ini</span><br><span class="line">                include fastcgi.conf;</span><br><span class="line">                fastcgi_intercept_errors on;</span><br><span class="line">                include snippets/fastcgi-php.conf;</span><br><span class="line">                include fastcgi.conf;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">                fastcgi_pass unix:/run/php/php7.2-fpm.sock;</span><br><span class="line">                fastcgi_param HTTPS on; </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location ~* \.(jscsspngjpgjpeggifico)$ &#123;</span><br><span class="line">                expires max;</span><br><span class="line">                log_not_found off;</span><br><span class="line">        &#125;</span><br><span class="line">        rewrite /wp-admin$ $scheme://$host$uri/ permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## 结束</span><br><span class="line"></span><br><span class="line">ln -s /etc/nginx/sites-available/www.sczhaoqi.com www.sczhaoqi.com</span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><p>nginx -s reload</p><p>访问安装</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装相关软件&quot;&gt;&lt;a href=&quot;#安装相关软件&quot; class=&quot;headerlink&quot; title=&quot;安装相关软件&quot;&gt;&lt;/a&gt;安装相关软件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;  系统环境 ubuntu18.04&lt;/li&gt;
&lt;li&gt;  安装nginx php php-fp</summary>
      
    
    
    
    <category term="research" scheme="http://example.com/categories/research/"/>
    
    <category term="网站搭建" scheme="http://example.com/categories/research/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="nginx" scheme="http://example.com/tags/nginx/"/>
    
    <category term="wordpress" scheme="http://example.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>nimble___skp__post_page_2</title>
    <link href="http://example.com/2021/08/27/nimble-skp-post-page-2/"/>
    <id>http://example.com/2021/08/27/nimble-skp-post-page-2/</id>
    <published>2021-08-27T05:58:15.000Z</published>
    <updated>2021-08-30T03:39:57.067Z</updated>
    
    <content type="html"><![CDATA[<p>a:4:{s:10:”collection”;a:9:{i:0;a:5:{s:2:”id”;s:10:”loop_start”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:1;a:5:{s:2:”id”;s:14:”before_content”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:2;a:5:{s:2:”id”;s:13:”after_content”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:3;a:5:{s:2:”id”;s:8:”loop_end”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:4;a:5:{s:2:”id”;s:19:”nimble_local_header”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:5;a:5:{s:2:”id”;s:19:”nimble_local_footer”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:6;a:5:{s:2:”id”;s:14:”__after_header”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:7;a:5:{s:2:”id”;s:21:”__before_main_wrapper”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}i:8;a:5:{s:2:”id”;s:15:”__before_footer”;s:5:”level”;s:8:”location”;s:10:”collection”;a:1:{i:0;a:4:{s:2:”id”;s:22:”__nimble__903e2c2a9d57”;s:5:”level”;s:7:”section”;s:10:”collection”;a:1:{i:0;a:4:{s:2:”id”;s:22:”__nimble__7c9977be6b18”;s:5:”level”;s:6:”column”;s:10:”collection”;a:1:{i:0;a:5:{s:2:”id”;s:22:”__nimble__fc09909f8c2d”;s:5:”level”;s:6:”module”;s:11:”module_type”;s:22:”czr_simple_html_module”;s:7:”ver_ini”;s:6:”3.1.21”;s:5:”value”;a:1:{s:12:”html_content”;s:339:””<div style="text-align:center;">\n<a href="http:\\/\\/www.beian.gov.cn\\/portal\\/registerSystemInfo?recordcode=44030502001921">\u516c\u5b89\u5907\u6848\u53f744030502001921\n&lt;\/a&gt;\n&amp;\n<a href="http:\\/\\/www.miitbeian.gov.cn">\u7ca4ICP\u590718057738\u53f7-1\n&lt;\/a&gt;\n&lt;\/div&gt;””;}}}s:7:”ver_ini”;s:6:”3.1.21”;}}s:7:”ver_ini”;s:6:”3.1.21”;}}s:7:”options”;a:0:{}s:7:”ver_ini”;s:6:”3.1.21”;}}s:13:”local_options”;a:0:{}s:5:”fonts”;a:0:{}s:41:”__inherits_group_skope_tmpl_when_exists__“;b:0;}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;a:4:{s:10:”collection”;a:9:{i:0;a:5:{s:2:”id”;s:10:”loop_start”;s:5:”level”;s:8:”location”;s:10:”collection”;a:0:{}s:7:”options”;a:0:{}s:</summary>
      
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>如何实现web接口提交flinkSQL</title>
    <link href="http://example.com/2021/08/27/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0web%E6%8E%A5%E5%8F%A3%E6%8F%90%E4%BA%A4flinksql/"/>
    <id>http://example.com/2021/08/27/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0web%E6%8E%A5%E5%8F%A3%E6%8F%90%E4%BA%A4flinksql/</id>
    <published>2021-08-27T02:32:22.000Z</published>
    <updated>2021-08-30T03:39:57.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发思路"><a href="#开发思路" class="headerlink" title="开发思路"></a>开发思路</h2><p><em>Schema信息</em></p><p><em>hive的catalog保存管理已有schema信息</em></p><p>任务模式</p><p>yarn的资源管理，并且每个SQL任务独立，任务失败后Application自动结束</p><p>优先思考的问题</p><p>Table of Contents</p><ul><li><p>  <a href="#%E5%BC%80%E5%8F%91%E6%80%9D%E8%B7%AF">开发思路</a></p></li><li><p>  <a href="#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-hivecatalog">如何使用 HiveCatalog</a></p></li><li><p>  <a href="#catalog%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B">catalog配置示例</a></p></li><li><p>  <a href="#%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90">配置完成</a></p></li><li><p>  <a href="#sql-client%E5%8A%9F%E8%83%BD%E9%A1%B9">SQL-Client功能项</a></p></li><li><p>  <a href="#%E6%80%9D%E8%B7%AF">思路</a></p></li><li><p>  <a href="#%E7%94%A8%E6%88%B7%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E6%AD%A5%E9%AA%A4">用户请求处理步骤</a></p></li><li><p>  <a href="#%E5%BC%80%E5%8F%91%E5%A4%87%E5%BF%98">开发备忘</a></p></li></ul><h2 id="如何使用-HiveCatalog"><a href="#如何使用-HiveCatalog" class="headerlink" title="如何使用 HiveCatalog"></a>如何使用 HiveCatalog</h2><h3 id="catalog配置示例"><a href="#catalog配置示例" class="headerlink" title="catalog配置示例"></a>catalog配置示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#/opt/flink/conf/sql-client-defaults.yaml </span><br><span class="line"></span><br><span class="line">execution:</span><br><span class="line">    planner: blink</span><br><span class="line">    current-catalog: hive  # set the HiveCatalog as the current catalog of the session</span><br><span class="line">    current-database: default</span><br><span class="line">catalogs:</span><br><span class="line">   - name: hive</span><br><span class="line">     type: hive</span><br><span class="line">     default-database: default</span><br><span class="line">     hive-conf-dir: /opt/hive/conf # hive.metastore.uris代码中可以直接使用HiveConf创建Catalog注册到TableEnv</span><br></pre></td></tr></table></figure><h3 id="配置完成"><a href="#配置完成" class="headerlink" title="配置完成"></a>配置完成</h3><ul><li>  一旦配置正确，就HiveCatalog应该开箱即用。用户可以使用 DDL 创建 Flink 元对象，应该立即看到它们。</li><li>  is_generic=true 通用表 hive中不可用，is_generic=false 非通用表 hive中可用</li><li>  重启flink-SQL-Client后，已经创建的表可见</li><li>  使用hive的metastore读取元数据信息，权限控制 (RetryingMetaStoreClient proxy=class org.apache.hadoop.hive.metastore.HiveMetaStoreClient ugi=admin(auth:SIMPLE))</li><li>  <strong>风险点: 集群依赖jar的安装下载,兼容性问题</strong></li></ul><h2 id="SQL-Client功能项"><a href="#SQL-Client功能项" class="headerlink" title="SQL-Client功能项"></a>SQL-Client功能项</h2><ol><li> source与sink的创建，编辑，管理</li><li> 开发功能 示例数据 source/sink</li><li> 调试功能 debug运行时的输入输出</li><li> 线上运行 提交运行，获取jobId，状态监控，日志获取，启动停止/恢复</li><li> catalog的管理</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>flink-sql-client中SqlClient用于提交SQL任务cli.executeInNonInteractiveMode(readExecutionContent()); // 1.13.x<br> Operation operation = executor.parseStatement(sessionId, stmt);<br> // 最终调用<br> org.apache.flink.table.client.gateway.local.LocalExecutor#executeOperation   @Override<br>    public TableResult executeOperation(String sessionId, Operation operation)<br>            throws SqlExecutionException {<br>        final ExecutionContext context = getExecutionContext(sessionId);<br>        final TableEnvironmentInternal tEnv =<br>               (TableEnvironmentInternal) context.getTableEnvironment();<br>        try {<br>            return context.wrapClassLoader(() -&gt; tEnv.executeInternal(operation));<br>       } catch (Exception e) {<br>            throw new SqlExecutionException(MESSAGE_SQL_EXECUTION_ERROR, e);<br>       }<br>   }默认情况下,读取FLINK_CONF_DIR下的flink_cluster集群配置(job_manager地址,提交任务)</li><li> flink jar 提交有 集群模式 和 独立模式, 对应SQL都是提交到相同集群上运行？</li><li> flink-sql的资源队列控制与用户权限</li><li> 网络与账户权限问题，（后续如kafka2kafka，kafka2mysql，kafka2es，网络互通与账户权限）</li><li>sql-client 多个用户提交同一个集群,无法满足资源隔离需求<ol><li> 自定义封装SQL-client之后是否能控制实现指定集群/拉起新集群,从而限制资源/完成隔离</li></ol></li><li> 用户自定义函数 udf的需求</li></ol><p><img src="https://www.sczhaoqi.com/wp-content/uploads/2021/08/20210210152056645.png"></p><p>flink yarn-per-job</p><p>flink yarn-cluster 提交流程</p><h3 id="用户请求处理步骤"><a href="#用户请求处理步骤" class="headerlink" title="用户请求处理步骤"></a>用户请求处理步骤</h3><ol><li> 配置集群环境, flinkSQL读取hive的Catalog</li><li> 用户界面管理Table(创建,修改,删除) DDL</li><li>用户编写SQL语句实现查询与数据转换逻辑 DML<ol><li> 用户一个Job只包含一条SQL(强制要求?!)</li><li> 用户一个Job多条SQL(1个集群多个job/多个集群每个集群一个JOB)</li><li> 用户首次提交创建一个集群(维护用户的flink集群,所有用户的任务提交到该集群)</li></ol></li><li> 用户配置其他相关(checkpoint/重启策略)</li><li>参考sql-client代码处理依赖模块加载,创建tableEnv,提交查询<ol><li> 默认通过读取本地集群配置</li><li> 指定路径下预先配置插件包(connector相关/udf相关)</li><li> 可指定job_manager,实现多个SQL运行于相同集群</li><li> flink run 模式</li></ol></li><li>yarn-per-job启动的集群不包含提交任务相关的jar及接口,即不可重用<ol><li> 每次执行JOB前先创建一个flink-yarn集群,然后分次提交SQL的任务,(select 限制返回时长和条数, insert 提交成功即返回)</li><li> 每次执行SQL启动一个yarn-per-job 集群</li><li>预先启动一个flink-yarn集群,配置指定集群appId<ol><li> start cluster then submit queries 每次执行前先创建一个flink-yarn集群,然后分次提交SQL的任务</li><li> start cluster when submit queries 每次启动一个yarn-per-job集群,再执行</li><li> prepare the cluster before submit queries 提前手动创建一个flink-yarn集群,配置集群appId</li></ol></li></ol></li><li> 任务状态与停止</li></ol><h2 id="开发备忘"><a href="#开发备忘" class="headerlink" title="开发备忘"></a>开发备忘</h2><ol><li> yarn App(flink 集群) 与 flinkJob</li><li> <a href="https://hadoop.apache.org/docs/r2.7.3/hadoop-yarn/hadoop-yarn-site/ResourceManagerRest.html#Cluster_Application_State_API">yarn接口</a> 与 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/ops/rest_api/">flink接口</a></li><li>停止集群<ol><li> 当flinkjob处于running状态时,调用cancel接口, Yarn(FINISHED KILLED)</li><li> 当flinkjob处于failed状态时,调用cancel接口无效,集群仍存在, 此时调用cluster的DELETE,Yarn(FINISHED SUCCEEDED)</li><li> 当上面接口都调用失败时,调用yarn接口kill应用,Yarn(FINISHED KILLED)</li></ol></li><li>权限相关异常<ul><li>  create database 与create table Got exception: org.apache.hadoop.security.AccessControlException Permission denied: user=root, access=WRITE, inode=”/user/hive/warehouse/flink.db”:admin:supergroup:drwxr-xr-</li></ul></li><li>detached与attached<ol><li> detached模式下，appmaster 和jobmanager绑定，jobmanager超过retry次数后，globalFailure 退出，Yarn上的App同时Finished，FinalStatus标记为Failed</li><li> attached模式下，appmaster与jobmanager分离，超过失败次数后job标记为failed，但yarn-per-job的flink集群并不会退出，同时Yarn的App为RUNNING，FinalStatus为UNDEFINED</li></ol></li><li>flink的HA模式<ul><li>  on-yarn 的HA模式一般采用zookeeper来保存中间状态，当app异常退出，yarn自动拉起对应的app进行appattempts</li><li>  appattempts的最大次数配置 yarn的配置 &gt; flink的配置，两者取最小值</li><li>  非程序内部异常退出，似乎不计算为attempts次数，手动kill的am可以无限次重启</li><li>  flink本身retry次数用尽，会直接设置app的状态，为正常的app行为，故不会再次拉起</li></ul></li><li> HA配置demo如下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># /opt/flink/conf/flink-conf.yaml </span><br><span class="line"></span><br><span class="line">peline.max-parallelism: 20</span><br><span class="line">restart-strategy: fixed-delay</span><br><span class="line">pipeline.auto-watermark-interval: 5000 ms</span><br><span class="line">restart-strategy.fixed-delay.delay: 10 s</span><br><span class="line">restart-strategy.fixed-delay.attempts: 1</span><br><span class="line"># HighAvailabilityOptions HA-MODE</span><br><span class="line">yarn.application-attempts: 2</span><br><span class="line">high-availability: zookeeper</span><br><span class="line">high-availability.zookeeper.quorum: localhost:2181</span><br><span class="line">high-availability.storageDir: hdfs:///tmp/flink/recovery</span><br><span class="line">high-availability.zookeeper.path.root: /flink_on_yarn</span><br><span class="line">high-availability.cluster-id: /cluster_yarn</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发思路&quot;&gt;&lt;a href=&quot;#开发思路&quot; class=&quot;headerlink&quot; title=&quot;开发思路&quot;&gt;&lt;/a&gt;开发思路&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Schema信息&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;hive的catalog保存管理已有schema信息&lt;/em&gt;&lt;/</summary>
      
    
    
    
    <category term="program" scheme="http://example.com/categories/program/"/>
    
    <category term="大数据" scheme="http://example.com/categories/program/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="flink" scheme="http://example.com/tags/flink/"/>
    
    <category term="flink-sql" scheme="http://example.com/tags/flink-sql/"/>
    
  </entry>
  
  <entry>
    <title>wp_footer</title>
    <link href="http://example.com/2021/08/24/wp-footer/"/>
    <id>http://example.com/2021/08/24/wp-footer/</id>
    <published>2021-08-24T10:20:16.000Z</published>
    <updated>2021-08-30T03:39:57.247Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;text-align:center;&quot;&gt;        </span><br><span class="line">&lt;a href=&quot;&lt;?php echo esc_url( __(&#x27;http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=44030502001921&#x27;,&#x27;&#x27;)); ?&gt;&quot;&gt;</span><br><span class="line">             公安备案号44030502001921</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;span role=&quot;separator&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;a href=&quot;&lt;?php echo esc_url( __( &#x27;http://www.miitbeian.gov.cn&#x27;, &#x27;&#x27; ) ); ?&gt;&quot;&gt;</span><br><span class="line">      粤ICP备18057738号-1</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="research" scheme="http://example.com/categories/research/"/>
    
    <category term="网站搭建" scheme="http://example.com/categories/research/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="wordpress" scheme="http://example.com/tags/wordpress/"/>
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="footer" scheme="http://example.com/tags/footer/"/>
    
    <category term="备案信息" scheme="http://example.com/tags/%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>联系表单 1</title>
    <link href="http://example.com/2021/08/24/%E8%81%94%E7%B3%BB%E8%A1%A8%E5%8D%95-1/"/>
    <id>http://example.com/2021/08/24/%E8%81%94%E7%B3%BB%E8%A1%A8%E5%8D%95-1/</id>
    <published>2021-08-24T08:58:24.000Z</published>
    <updated>2021-08-30T03:39:57.247Z</updated>
    
    <content type="html"><![CDATA[<p>您的名字 [text* your-name] 您的电邮 [email* your-email] 主题 [text* your-subject] 您的消息 (可选) [textarea your-message] [submit “提交”] [_site_title] “[your-subject]“ [_site_title] 发件人：[your-name] &lt;[your-email]&gt; 主题：[your-subject] 消息正文： [your-message] – 这封邮件来自联系表单[_site_title] ([_site_url]) [_site_admin_email] Reply-To: [your-email] 0 0 [_site_title] “[your-subject]“ [_site_title] 消息正文： [your-message] – 这封邮件来自联系表单[_site_title] ([_site_url]) [your-email] Reply-To: [_site_admin_email] 0 0 谢谢。已发送您的信息。 发生错误，请稍后再试。 出现错误，请检查后重新尝试。 发生错误，请稍后再试。 您必须阅读并接受条款和条件，才能发送信息。 必填字段。 内容太长。 内容太短。 上传文件时出错。 抱歉，不允许上传这一类型的文件。 该文件太大。 上传文件时出错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;您的名字 [text* your-name] 您的电邮 [email* your-email] 主题 [text* your-subject] 您的消息 (可选) [textarea your-message] [submit “提交”] [_site_title] “[y</summary>
      
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 1</title>
    <link href="http://example.com/2021/08/24/458/"/>
    <id>http://example.com/2021/08/24/458/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.043Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 2</title>
    <link href="http://example.com/2021/08/24/459/"/>
    <id>http://example.com/2021/08/24/459/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.047Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 3</title>
    <link href="http://example.com/2021/08/24/460/"/>
    <id>http://example.com/2021/08/24/460/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.047Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 4</title>
    <link href="http://example.com/2021/08/24/461/"/>
    <id>http://example.com/2021/08/24/461/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.047Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 5</title>
    <link href="http://example.com/2021/08/24/462/"/>
    <id>http://example.com/2021/08/24/462/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.051Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 6</title>
    <link href="http://example.com/2021/08/24/463/"/>
    <id>http://example.com/2021/08/24/463/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.051Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 7</title>
    <link href="http://example.com/2021/08/24/464/"/>
    <id>http://example.com/2021/08/24/464/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.059Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 8</title>
    <link href="http://example.com/2021/08/24/465/"/>
    <id>http://example.com/2021/08/24/465/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.059Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>Untitled Post - 9</title>
    <link href="http://example.com/2021/08/24/466/"/>
    <id>http://example.com/2021/08/24/466/</id>
    <published>2021-08-24T08:27:01.000Z</published>
    <updated>2021-08-30T03:39:57.063Z</updated>
    
    
    
    
    <category term="uncategorized" scheme="http://example.com/categories/uncategorized/"/>
    
    
  </entry>
  
  <entry>
    <title>单节点HDFS配置</title>
    <link href="http://example.com/2021/08/24/%E5%8D%95%E8%8A%82%E7%82%B9hdfs%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2021/08/24/%E5%8D%95%E8%8A%82%E7%82%B9hdfs%E9%85%8D%E7%BD%AE/</id>
    <published>2021-08-24T07:07:40.000Z</published>
    <updated>2021-08-30T03:39:57.247Z</updated>
    
    <content type="html"><![CDATA[<ol><li> core-site.xml</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">  you may not use this file except in compliance with the License.</span><br><span class="line">  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License for the specific language governing permissions and</span><br><span class="line">  limitations under the License. See accompanying LICENSE file.</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">         &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">         &lt;value&gt;hdfs://127.0.0.1:9000&lt;/value&gt;                               </span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">      &lt;name&gt;hadoop.proxyuser.root.hosts&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;*&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">      &lt;name&gt;hadoop.proxyuser.root.users&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;admin,user1,user2&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;                                 </span><br><span class="line">      &lt;name&gt;hadoop.proxyuser.root.hosts&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;*&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">      &lt;name&gt;hadoop.proxyuser.root.users&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;admin,user1,user2&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;  </span><br></pre></td></tr></table></figure><p>hdfs-site.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line">  you may not use this file except in compliance with the License.</span><br><span class="line">  You may obtain a copy of the License at</span><br><span class="line"></span><br><span class="line">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"></span><br><span class="line">  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">  See the License for the specific language governing permissions and</span><br><span class="line">  limitations under the License. See accompanying LICENSE file.</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">          &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;file:///data/hdfs/name&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">     &lt;property&gt;</span><br><span class="line">          &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;file:///data/hdfs/data&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt; </span><br><span class="line">     &lt;property&gt;</span><br><span class="line">          &lt;name&gt;dfs.namenode.checkpoint.dir&lt;/name&gt;</span><br><span class="line">          &lt;value&gt;file:///data/hdfs/namesecondary&lt;/value&gt;</span><br><span class="line">     &lt;/property&gt;</span><br><span class="line">      &lt;property&gt;</span><br><span class="line">         &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">         &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">      &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p><a href="https://www.sczhaoqi.com/wp-content/uploads/2021/08/hadoop.conf_.zip">hadoop.conf</a><a href="https://www.sczhaoqi.com/wp-content/uploads/2021/08/hadoop.conf_.zip">下载</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt; core-site.xml&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    <category term="program" scheme="http://example.com/categories/program/"/>
    
    <category term="大数据" scheme="http://example.com/categories/program/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
    <category term="hdfs" scheme="http://example.com/tags/hdfs/"/>
    
  </entry>
  
  <entry>
    <title>HDFS supergroup superuser</title>
    <link href="http://example.com/2021/08/24/hdfs-supergroup-superuser/"/>
    <id>http://example.com/2021/08/24/hdfs-supergroup-superuser/</id>
    <published>2021-08-24T03:02:48.000Z</published>
    <updated>2021-08-30T03:39:57.243Z</updated>
    
    <content type="html"><![CDATA[<p>默认情况下 hdfs 的namenode启动用户为 superuser</p><p>当程序实际运行中,获取进程/线程的用户,UGI的用户信息进行权限认证</p><p>其他用户需要超级权限,则需要加入supergroup</p><p>Hadoop本身的用户和组的关系，都是同步Linux系统中的，但是HDFS和Linux的超级用户组又有一点差别，HDFS中的超级用户组是supergroup，但是Linux中默认是没有supergoup这个组，这个时候只需要在Linux中增加supergroup这个组，然后将要在HDFS中加入到supergroup中的用户加到这个组中，再同步HDFS用户和组即可。</p><p>操作步骤如下：</p><p>1、在Linux执行如下命令增加supergroup</p><p>groupadd supergroup</p><p>2、如将用户yarn增加到supergroup中，再执行：</p><p>usermod -a -G supergroup yarn</p><p>3、同步系统的权限信息到HDFS：</p><p>su - hdfs -s /bin/bash -c “hdfs dfsadmin -refreshUserToGroupsMappings”</p><p>4、验证</p><ol><li>将/user/hdfs目录的权限由700，修改为770</li></ol><p>su - hdfs -s /bin/bash -c “hadoop fs -chmod 770 /user/hdfs”</p><ol start="2"><li>通过加到supergroup组中的yarn用户去列这个目录：</li></ol><p>su - yarn -s /bin/bash -c “hadoop fs -ls /user/hdfs”</p><p>可成功列出目录即表示操作成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;默认情况下 hdfs 的namenode启动用户为 superuser&lt;/p&gt;
&lt;p&gt;当程序实际运行中,获取进程/线程的用户,UGI的用户信息进行权限认证&lt;/p&gt;
&lt;p&gt;其他用户需要超级权限,则需要加入supergroup&lt;/p&gt;
&lt;p&gt;Hadoop本身的用户和组的关系，都</summary>
      
    
    
    
    <category term="program" scheme="http://example.com/categories/program/"/>
    
    <category term="大数据" scheme="http://example.com/categories/program/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="hadoop" scheme="http://example.com/tags/hadoop/"/>
    
    <category term="hdfs" scheme="http://example.com/tags/hdfs/"/>
    
  </entry>
  
  <entry>
    <title>Java获取泛型对象属性/私有对象属性</title>
    <link href="http://example.com/2021/07/27/java%E8%8E%B7%E5%8F%96%E6%B3%9B%E5%9E%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7-%E7%A7%81%E6%9C%89%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7/"/>
    <id>http://example.com/2021/07/27/java%E8%8E%B7%E5%8F%96%E6%B3%9B%E5%9E%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7-%E7%A7%81%E6%9C%89%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7/</id>
    <published>2021-07-27T07:25:53.000Z</published>
    <updated>2021-08-30T03:39:57.243Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-泛型对象-非私有属性-有ReadMethod"><a href="#1-泛型对象-非私有属性-有ReadMethod" class="headerlink" title="1.泛型对象,非私有属性,有ReadMethod"></a>1.泛型对象,非私有属性,有ReadMethod</h4><p>实现思路反射,获取Object实际class与bean属性,调用readMethod读取属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public Map&lt;String, Object&gt; transBean2Map(Object obj) &#123;</span><br><span class="line">        if (obj == null) &#123;</span><br><span class="line">            return Collections.emptyMap();</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;(10);</span><br><span class="line">        try &#123;</span><br><span class="line">            java.beans.BeanInfo beanInfo = java.beans.Introspector.getBeanInfo(obj.getClass());</span><br><span class="line">            PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();</span><br><span class="line"></span><br><span class="line">            for (java.beans.PropertyDescriptor property : propertyDescriptors) &#123;</span><br><span class="line">                String key = property.getName();</span><br><span class="line">                // 过滤class属性</span><br><span class="line">                if (&quot;allFields&quot;.equals(key)) &#123;</span><br><span class="line">                    // 得到property对应的getter方法</span><br><span class="line">                    Method getter = property.getReadMethod();</span><br><span class="line"></span><br><span class="line">                    LOG.debug(&quot;getter &#123;&#125;&quot;, getter);</span><br><span class="line">                    Object value = getter.invoke(obj);</span><br><span class="line">                    LOG.debug(&quot;key: &#123;&#125;,value: &#123;&#125;&quot;, key, value);</span><br><span class="line">                    map.put(key, value);</span><br><span class="line"></span><br><span class="line">                    Map&lt;Object, Object&gt; allValues = (Map&lt;Object, Object&gt;) value;</span><br><span class="line">                    allValues.forEach((key1, value1) -&gt; &#123;</span><br><span class="line">                        String fieldKey = ((com.google.protobuf.Descriptors.FieldDescriptor) key1).getName();</span><br><span class="line">                        map.put(fieldKey, value1);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            LOG.error(&quot;transBean2Map Error &quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2. 私有属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; clusterType = clusterDescriptor.getClass();</span><br><span class="line">Field clusterField = clusterType.getDeclaredField(&quot;yarnPb&quot;);</span><br><span class="line">clusterField.setAccessible(true);</span><br><span class="line">ApplicationReportPBImpl yarnPb = (ApplicationReportPBImpl) clusterField.get(clusterDescriptor);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-泛型对象-非私有属性-有ReadMethod&quot;&gt;&lt;a href=&quot;#1-泛型对象-非私有属性-有ReadMethod&quot; class=&quot;headerlink&quot; title=&quot;1.泛型对象,非私有属性,有ReadMethod&quot;&gt;&lt;/a&gt;1.泛型对象,非私有属性,有</summary>
      
    
    
    
    <category term="program" scheme="http://example.com/categories/program/"/>
    
    <category term="JAVA" scheme="http://example.com/categories/program/JAVA/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="反射" scheme="http://example.com/tags/%E5%8F%8D%E5%B0%84/"/>
    
    <category term="可见性" scheme="http://example.com/tags/%E5%8F%AF%E8%A7%81%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>MiniKube安装使用</title>
    <link href="http://example.com/2021/07/16/minikube%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2021/07/16/minikube%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-16T03:29:35.000Z</published>
    <updated>2021-08-30T03:39:57.243Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://minikube.sigs.k8s.io/docs/start/">https://minikube.sigs.k8s.io/docs/start/</a></p><h1 id="minikube-启动"><a href="#minikube-启动" class="headerlink" title="minikube 启动"></a>minikube 启动</h1><p>minikube 是本地 Kubernetes，专注于让 Kubernetes 易于学习和开发。</p><p>您所需要的只是 Docker（或类似兼容的）容器或虚拟机环境，而 Kubernetes 只需一个命令： <code>minikube start</code></p><h2 id="你需要什么"><a href="#你需要什么" class="headerlink" title="你需要什么"></a>你需要什么<a href="https://minikube.sigs.k8s.io/docs/start/#what-youll-need"></a></h2><ul><li>  2 个或更多 CPU</li><li>  2GB 可用内存</li><li>  20GB 可用磁盘空间</li><li>  网络连接</li><li>  容器或虚拟机管理器，例如：<a href="https://minikube.sigs.k8s.io/docs/drivers/docker/">Docker</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/hyperkit/">Hyperkit</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/hyperv/">Hyper-V</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/kvm2/">KVM</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/parallels/">Parallels</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/podman/">Podman</a>、<a href="https://minikube.sigs.k8s.io/docs/drivers/virtualbox/">VirtualBox</a>或<a href="https://minikube.sigs.k8s.io/docs/drivers/vmware/">VMWare</a></li></ul><h2 id="1安装"><a href="#1安装" class="headerlink" title="1安装"></a><strong>1</strong>安装</h2><p>单击描述目标平台的按钮。对于其他架构，请参阅<a href="https://github.com/kubernetes/minikube/releases/latest">发布页面</a>以获取 minikube 二进制文件的完整列表。</p><p>操作系统</p><p>x86-64</p><p>发布类型</p><p>稳定的 测试版</p><p>安装程序类型</p><p>.exe 下载 Windows 包管理器 巧克力味</p><p>要使用**.exe 下载<strong>在</strong>x86-64** <strong>Windows</strong>上安装最新的 minikube<strong>稳定</strong>版本：</p><p>下载并运行独立的<a href="https://storage.googleapis.com/minikube/releases/latest/minikube-installer.exe">minikube Windows 安装程序</a>。</p><p><em>如果您使用 CLI 执行安装，则需要先关闭该 CLI 并打开一个新的 CLI，然后再继续。</em></p><h2 id="2启动集群"><a href="#2启动集群" class="headerlink" title="2启动集群"></a><strong>2</strong>启动集群</h2><p>从具有管理员访问权限的终端（但未以 root 身份登录），运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start</span><br></pre></td></tr></table></figure><p>如果 minikube 无法启动，请参阅<a href="https://minikube.sigs.k8s.io/docs/drivers/">驱动程序页面</a>以获取设置兼容容器或虚拟机管理器的帮助。</p><h2 id="3与您的集群交互"><a href="#3与您的集群交互" class="headerlink" title="3与您的集群交互"></a><strong>3</strong>与您的集群交互</h2><p>如果您已经安装了 kubectl，您现在可以使用它来访问您闪亮的新集群：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get po -A</span><br></pre></td></tr></table></figure><p>或者，如果您不介意命令行中的双破折号，minikube 可以下载相应版本的 kubectl：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube kubectl -- get po -A</span><br></pre></td></tr></table></figure><p>最初，某些服务（例如存储供应器）可能尚未处于运行状态。这是集群启动期间的正常情况，会立即自行解决。为了进一步了解您的集群状态，minikube 捆绑了 Kubernetes 仪表板，让您可以轻松适应新环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube dashboard</span><br></pre></td></tr></table></figure><h2 id="4部署应用程序"><a href="#4部署应用程序" class="headerlink" title="4部署应用程序"></a><strong>4</strong>部署应用程序</h2><p>创建示例部署并在端口 8080 上公开它：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4</span><br><span class="line">kubectl expose deployment hello-minikube --type=NodePort --port=8080</span><br></pre></td></tr></table></figure><p>这可能需要一点时间，但是当您运行时，您的部署将很快显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get services hello-minikube</span><br></pre></td></tr></table></figure><p>访问此服务的最简单方法是让 minikube 为您启动 Web 浏览器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube service hello-minikube</span><br></pre></td></tr></table></figure><p>或者，使用 kubectl 转发端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward service/hello-minikube 7080:8080</span><br></pre></td></tr></table></figure><p>您的应用程序现在可以在<a href="http://localhost:7080/">http://localhost:7080/ 上使用</a></p><h3 id="负载均衡器部署"><a href="#负载均衡器部署" class="headerlink" title="负载均衡器部署"></a>负载均衡器部署<a href="https://minikube.sigs.k8s.io/docs/start/#loadbalancer-deployments"></a></h3><p>要访问 LoadBalancer 部署，请使用“minikube tunnel”命令。这是一个示例部署：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment balanced --image=k8s.gcr.io/echoserver:1.4  </span><br><span class="line">kubectl expose deployment balanced --type=LoadBalancer --port=8080</span><br></pre></td></tr></table></figure><p>在另一个窗口中，启动隧道为“平衡”部署创建一个可路由的 IP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube tunnel</span><br></pre></td></tr></table></figure><p>要查找可路由的 IP，请运行以下命令并检查<code>EXTERNAL-IP</code>列：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get services balanced</span><br></pre></td></tr></table></figure><p>您的部署现在可在 <EXTERNAL-IP>:8080</p><h2 id="5管理您的集群"><a href="#5管理您的集群" class="headerlink" title="5管理您的集群"></a><strong>5</strong>管理您的集群</h2><p>在不影响部署的应用程序的情况下暂停 Kubernetes：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube pause</span><br></pre></td></tr></table></figure><p>停止集群：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube stop</span><br></pre></td></tr></table></figure><p>增加默认内存限制（需要重启）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube config set memory 16384</span><br></pre></td></tr></table></figure><p>浏览易于安装的 Kubernetes 服务目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube addons list</span><br></pre></td></tr></table></figure><p>创建第二个运行较旧 Kubernetes 版本的集群：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start -p aged --kubernetes-version=v1.16.1</span><br></pre></td></tr></table></figure><p>删除所有 minikube 集群：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube delete --all</span><br></pre></td></tr></table></figure><p>问题</p><p>解决方案</p><p>示例</p><p>1. google镜像无法下载</p><p>先下载mirror,然后打对应的tag</p><p>docker tag docker.io/mirrorgooglecontainers/kube-scheduler-amd64:v1.13.12 gcr.io/google_containers/kube-scheduler-amd64:v1.13.12</p><p>2.minikube dashboard访问</p><p>minikube自带dashboard</p><p>命令minikube dashboard启动 kubectl proxy –port=0 的proxy端口随机</p><p>3. 查看服务</p><p>minikube service list</p><p>minikube service list</p><p>4. hostpath</p><p>minikube</p><p>minikube hostpath 不在机器指定目录 /var/lib/docker/volumes/minikube/_data/hostpath-provisioner/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://minikube.sigs.k8s.io/docs/start/&quot;&gt;https://minikube.sigs.k8s.io/docs/start/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;minikube-启动&quot;&gt;&lt;a href=&quot;#miniku</summary>
      
    
    
    
    <category term="research" scheme="http://example.com/categories/research/"/>
    
    <category term="软件安装" scheme="http://example.com/categories/research/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="k8s" scheme="http://example.com/tags/k8s/"/>
    
    <category term="容器云" scheme="http://example.com/tags/%E5%AE%B9%E5%99%A8%E4%BA%91/"/>
    
    <category term="minikube" scheme="http://example.com/tags/minikube/"/>
    
  </entry>
  
  <entry>
    <title>JVM调优-命令大全(转)</title>
    <link href="http://example.com/2021/07/07/jvm%E8%B0%83%E4%BC%98-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%E8%BD%AC/"/>
    <id>http://example.com/2021/07/07/jvm%E8%B0%83%E4%BC%98-%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%E8%BD%AC/</id>
    <published>2021-07-07T08:44:19.000Z</published>
    <updated>2021-08-30T03:39:57.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JVM调优-命令大全（jps-jstat-jmap-jhat-jstack-jinfo"><a href="#JVM调优-命令大全（jps-jstat-jmap-jhat-jstack-jinfo" class="headerlink" title="JVM调优-命令大全（jps jstat jmap jhat jstack jinfo"></a><a href="https://www.cnblogs.com/zh94/p/12789556.html">JVM调优-命令大全（jps jstat jmap jhat jstack jinfo</a></h1><p>常用命令导航 Arnold_zhao：Jps -v 【查看当前进程启动时显示指定的参数】<br>Jinfo：【查看所有非显示指定的参数】<br>jinfo -flags 17996 【显示JVM参数等信息】<br>jinfo -sysprops 17996【 输出系统属性】</p><p>jmap -heap 17996【显示Java堆详细信息（堆中Eden区，FromSpace，Old区等已用空间大小）】<br>jmap -dump:live,format=b,file=C:\JAVADUMP\dump.hprof 17996【输出dump快照】<br>jhat C:\JAVADUMP\dump.hprof 【使用jhat分析当前的本地dump文件，分析完成后可以通过浏览器：localhost:7000访问结果（jhat分析更加占用内存，优先推荐使用Mat进行分析）】</p><p>jstat -gc 17996（PID） 1000（连续输出的时间间隔） 100000（连续输出的次数） 【监视当前进程的GC状态信息】<br>运用jvm自带的命令可以方便的在生产监控和打印堆栈的日志信息帮忙我们来定位问题！虽然jvm调优成熟的工具已经有很多：jconsole、大名鼎鼎的VisualVM，IBM的Memory Analyzer等等，但是在生产环境出现问题的时候，一方面工具的使用会有所限制，另一方面喜欢装X的我们，总喜欢在出现问题的时候在终端输入一些命令来解决。所有的工具几乎都是依赖于jdk的接口和底层的这些命令，研究这些命令的使用也让我们更能了解jvm构成和特性。Sun JDK监控和故障处理命令有jps jstat jmap jhat jstack jinfo下面做一一介绍</p><h2 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h2><p>JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程。</p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>jps [options] [hostid]</p><h3 id="option参数"><a href="#option参数" class="headerlink" title="option参数"></a>option参数</h3><ul><li>  -l : 输出主类全名或jar路径</li><li>  -q : 只输出LVMID</li><li>  -m : 输出JVM启动时传递给main()的参数</li><li>  -v : 输出JVM启动时显示指定的JVM参数</li></ul><p>其中[option]、[hostid]参数也可以不写。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>$ jps -l -m28920 org.apache.catalina.startup.Bootstrap start11589 org.apache.catalina.startup.Bootstrap start25816 sun.tools.jps.Jps -l -m</p><h2 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h2><p>jstat(JVM statistics Monitoring)是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据。</p><h3 id="命令格式-1"><a href="#命令格式-1" class="headerlink" title="命令格式"></a>命令格式</h3><p>jstat [option] LVMID [interval] [count]</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>  [option] : 操作参数</li><li>  LVMID : 本地虚拟机进程ID</li><li>  [interval] : 连续输出的时间间隔</li><li>  [count] : 连续输出的次数</li></ul><h4 id="option-参数总览"><a href="#option-参数总览" class="headerlink" title="option 参数总览"></a>option 参数总览</h4><p>Option</p><p>Displays…</p><p>class</p><p>class loader的行为统计。Statistics on the behavior of the class loader.</p><p>compiler</p><p>HotSpt JIT编译器行为统计。Statistics of the behavior of the HotSpot Just-in-Time compiler.</p><p>gc</p><p>垃圾回收堆的行为统计。Statistics of the behavior of the garbage collected heap.</p><p>gccapacity</p><p>各个垃圾回收代容量(young,old,perm)和他们相应的空间统计。Statistics of the capacities of the generations and their corresponding spaces.</p><p>gcutil</p><p>垃圾回收统计概述。Summary of garbage collection statistics.</p><p>gccause</p><p>垃圾收集统计概述（同-gcutil），附加最近两次垃圾回收事件的原因。Summary of garbage collection statistics (same as -gcutil), with the cause of the last and</p><p>gcnew</p><p>新生代行为统计。Statistics of the behavior of the new generation.</p><p>gcnewcapacity</p><p>新生代与其相应的内存空间的统计。Statistics of the sizes of the new generations and its corresponding spaces.</p><p>gcold</p><p>年老代和永生代行为统计。Statistics of the behavior of the old and permanent generations.</p><p>gcoldcapacity</p><p>年老代行为统计。Statistics of the sizes of the old generation.</p><p>gcpermcapacity</p><p>永生代行为统计。Statistics of the sizes of the permanent generation.</p><p>printcompilation</p><p>HotSpot编译方法统计。HotSpot compilation method statistics.</p><h4 id="option-参数详解"><a href="#option-参数详解" class="headerlink" title="option 参数详解"></a>option 参数详解</h4><h5 id="class"><a href="#class" class="headerlink" title="-class"></a><strong>-class</strong></h5><p>监视类装载、卸载数量、总空间以及耗费的时间$ jstat -class 11589Loaded Bytes Unloaded Bytes Time7035 14506.3 0 0.0 3.67</p><ul><li>  Loaded : 加载class的数量</li><li>  Bytes : class字节大小</li><li>  Unloaded : 未加载class的数量</li><li>  Bytes : 未加载class的字节大小</li><li>  Time : 加载时间</li></ul><h5 id="compiler"><a href="#compiler" class="headerlink" title="-compiler"></a><strong>-compiler</strong></h5><p>输出JIT编译过的方法数量耗时等$ jstat -compiler 1262Compiled Failed Invalid Time FailedType FailedMethod2573 1 0 47.60 1 org/apache/catalina/loader/WebappClassLoader findResourceInternal</p><ul><li>  Compiled : 编译数量</li><li>  Failed : 编译失败数量</li><li>  Invalid : 无效数量</li><li>  Time : 编译耗时</li><li>  FailedType : 失败类型</li><li>  FailedMethod : 失败方法的全限定名</li></ul><h5 id="gc"><a href="#gc" class="headerlink" title="-gc"></a><strong>-gc</strong></h5><p>垃圾回收堆的行为统计，常用命令$ jstat -gc 1262S0C S1C S0U S1U EC EU OC OU PC PU YGC YGCT FGC FGCT GCT26112.0 24064.0 6562.5 0.0 564224.0 76274.5 434176.0 388518.3 524288.0 42724.7 320 6.417 1 0.398 6.815C即Capacity 总容量，U即Used 已使用的容量</p><ul><li>  S0C : survivor0区的总容量</li><li>  S1C : survivor1区的总容量</li><li>  S0U : survivor0区已使用的容量</li><li>  S1C : survivor1区已使用的容量</li><li>  EC : Eden区的总容量</li><li>  EU : Eden区已使用的容量</li><li>  OC : Old区的总容量</li><li>  OU : Old区已使用的容量</li><li>  PC 当前perm的容量 (KB)</li><li>  PU perm的使用 (KB)</li><li>  YGC : 新生代垃圾回收次数</li><li>  YGCT : 新生代垃圾回收时间</li><li>  FGC : 老年代垃圾回收次数</li><li>  FGCT : 老年代垃圾回收时间</li><li>  GCT : 垃圾回收总消耗时间</li></ul><p>$ jstat -gc 1262 2000 20这个命令意思就是每隔2000ms输出1262的gc情况，一共输出20次</p><h5 id="gccapacity"><a href="#gccapacity" class="headerlink" title="-gccapacity"></a><strong>-gccapacity</strong></h5><p>同-gc，不过还会输出Java堆各区域使用到的最大、最小空间$ jstat -gccapacity 1262NGCMN NGCMX NGC S0C S1C EC OGCMN OGCMX OGC OC PGCMN PGCMX PGC PC YGC FGC614400.0 614400.0 614400.0 26112.0 24064.0 564224.0 434176.0 434176.0 434176.0 434176.0 524288.0 1048576.0 524288.0 524288.0 320 1</p><ul><li>  NGCMN : 新生代占用的最小空间</li><li>  NGCMX : 新生代占用的最大空间</li><li>  OGCMN : 老年代占用的最小空间</li><li>  OGCMX : 老年代占用的最大空间</li><li>  OGC：当前年老代的容量 (KB)</li><li>  OC：当前年老代的空间 (KB)</li><li>  PGCMN : perm占用的最小空间</li><li>  PGCMX : perm占用的最大空间</li></ul><h5 id="gcutil"><a href="#gcutil" class="headerlink" title="-gcutil"></a><strong>-gcutil</strong></h5><p>同-gc，不过输出的是已使用空间占总空间的百分比$ jstat -gcutil 28920S0 S1 E O P YGC YGCT FGC FGCT GCT12.45 0.00 33.85 0.00 4.44 4 0.242 0 0.000 0.242</p><h5 id="gccause"><a href="#gccause" class="headerlink" title="-gccause"></a><strong>-gccause</strong></h5><p>垃圾收集统计概述（同-gcutil），附加最近两次垃圾回收事件的原因$ jstat -gccause 28920S0 S1 E O P YGC YGCT FGC FGCT GCT LGCC GCC12.45 0.00 33.85 0.00 4.44 4 0.242 0 0.000 0.242 Allocation Failure No GC</p><ul><li>  LGCC：最近垃圾回收的原因</li><li>  GCC：当前垃圾回收的原因</li></ul><h5 id="gcnew"><a href="#gcnew" class="headerlink" title="-gcnew"></a><strong>-gcnew</strong></h5><p>统计新生代的行为$ jstat -gcnew 28920S0C S1C S0U S1U TT MTT DSS EC EU YGC YGCT419392.0 419392.0 52231.8 0.0 6 6 209696.0 3355520.0 1172246.0 4 0.242</p><ul><li>  TT：Tenuring threshold(提升阈值)</li><li>  MTT：最大的tenuring threshold</li><li>  DSS：survivor区域大小 (KB)</li></ul><h5 id="gcnewcapacity"><a href="#gcnewcapacity" class="headerlink" title="-gcnewcapacity"></a><strong>-gcnewcapacity</strong></h5><p>新生代与其相应的内存空间的统计$ jstat -gcnewcapacity 28920NGCMN NGCMX NGC S0CMX S0C S1CMX S1C ECMX EC YGC FGC4194304.0 4194304.0 4194304.0 419392.0 419392.0 419392.0 419392.0 3355520.0 3355520.0 4 0</p><ul><li>  NGC:当前年轻代的容量 (KB)</li><li>  S0CMX:最大的S0空间 (KB)</li><li>  S0C:当前S0空间 (KB)</li><li>  ECMX:最大eden空间 (KB)</li><li>  EC:当前eden空间 (KB)</li></ul><h5 id="gcold"><a href="#gcold" class="headerlink" title="-gcold"></a><strong>-gcold</strong></h5><p>统计旧生代的行为$ jstat -gcold 28920PC PU OC OU YGC FGC FGCT GCT1048576.0 46561.7 6291456.0 0.0 4 0 0.000 0.242</p><h5 id="gcoldcapacity"><a href="#gcoldcapacity" class="headerlink" title="-gcoldcapacity"></a><strong>-gcoldcapacity</strong></h5><p>统计旧生代的大小和空间$ jstat -gcoldcapacity 28920OGCMN OGCMX OGC OC YGC FGC FGCT GCT6291456.0 6291456.0 6291456.0 6291456.0 4 0 0.000 0.242</p><h5 id="gcpermcapacity"><a href="#gcpermcapacity" class="headerlink" title="-gcpermcapacity"></a><strong>-gcpermcapacity</strong></h5><p>永生代行为统计$ jstat -gcpermcapacity 28920PGCMN PGCMX PGC PC YGC FGC FGCT GCT1048576.0 2097152.0 1048576.0 1048576.0 4 0 0.000 0.242</p><h5 id="printcompilation"><a href="#printcompilation" class="headerlink" title="-printcompilation"></a><strong>-printcompilation</strong></h5><p>hotspot编译方法统计$ jstat -printcompilation 28920Compiled Size Type Method1291 78 1 java/util/ArrayList indexOf</p><ul><li>  Compiled：被执行的编译任务的数量</li><li>  Size：方法字节码的字节数</li><li>  Type：编译类型</li><li>  Method：编译方法的类名和方法名。类名使用”/“ 代替 “.” 作为空间分隔符. 方法名是给出类的方法名. 格式是一致于HotSpot - XX:+PrintComplation 选项</li></ul><h2 id="jmap"><a href="#jmap" class="headerlink" title="jmap"></a>jmap</h2><p>jmap(JVM Memory Map)命令用于生成heap dump文件，如果不使用这个命令，还阔以使用-XX:+HeapDumpOnOutOfMemoryError参数来让虚拟机出现OOM的时候·自动生成dump文件。jmap不仅能生成dump文件，还阔以查询finalize执行队列、Java堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。</p><h3 id="命令格式-2"><a href="#命令格式-2" class="headerlink" title="命令格式"></a>命令格式</h3><p>jmap [option] LVMID</p><h3 id="option参数-1"><a href="#option参数-1" class="headerlink" title="option参数"></a>option参数</h3><ul><li>  dump : 生成堆转储快照</li><li>  finalizerinfo : 显示在F-Queue队列等待Finalizer线程执行finalizer方法的对象</li><li>  heap : 显示Java堆详细信息</li><li>  histo : 显示堆中对象的统计信息</li><li>  permstat : to print permanent generation statistics</li><li>  F : 当-dump没有响应时，强制生成dump快照</li></ul><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><h5 id="dump"><a href="#dump" class="headerlink" title="-dump"></a><strong>-dump</strong></h5><p>常用格式-dump::live,format=b,file=<filename> piddump堆到文件,format指定输出格式，live指明是活着的对象,file指定文件名$ jmap -dump:live,format=b,file=dump.hprof 28920Dumping heap to /home/xxx/dump.hprof …Heap dump file createddump.hprof这个后缀是为了后续可以直接用MAT(Memory Anlysis Tool)打开。</p><h5 id="finalizerinfo"><a href="#finalizerinfo" class="headerlink" title="-finalizerinfo"></a><strong>-finalizerinfo</strong></h5><p>打印等待回收对象的信息$ jmap -finalizerinfo 28920Attaching to process ID 28920, please wait…Debugger attached successfully.Server compiler detected.JVM version is 24.71-b01Number of objects pending for finalization: 0可以看到当前F-QUEUE队列中并没有等待Finalizer线程执行finalizer方法的对象。</p><h5 id="heap"><a href="#heap" class="headerlink" title="-heap"></a><strong>-heap</strong></h5><p>打印heap的概要信息，GC使用的算法，heap的配置及wise heap的使用情况,可以用此来判断内存目前的使用情况以及垃圾回收情况$ jmap -heap 28920Attaching to process ID 28920, please wait…Debugger attached successfully.Server compiler detected.JVM version is 24.71-b01 using thread-local object allocation.Parallel GC with 4 thread(s)//GC 方式 Heap Configuration: //堆内存初始化配置MinHeapFreeRatio = 0 //对应jvm启动参数-XX:MinHeapFreeRatio设置JVM堆最小空闲比率(default 40)MaxHeapFreeRatio = 100 //对应jvm启动参数 -XX:MaxHeapFreeRatio设置JVM堆最大空闲比率(default 70)MaxHeapSize = 2082471936 (1986.0MB) //对应jvm启动参数-XX:MaxHeapSize=设置JVM堆的最大大小NewSize = 1310720 (1.25MB)//对应jvm启动参数-XX:NewSize=设置JVM堆的‘新生代’的默认大小MaxNewSize = 17592186044415 MB//对应jvm启动参数-XX:MaxNewSize=设置JVM堆的‘新生代’的最大大小OldSize = 5439488 (5.1875MB)//对应jvm启动参数-XX:OldSize=<value>:设置JVM堆的‘老生代’的大小NewRatio = 2 //对应jvm启动参数-XX:NewRatio=:‘新生代’和‘老生代’的大小比率SurvivorRatio = 8 //对应jvm启动参数-XX:SurvivorRatio=设置年轻代中Eden区与Survivor区的大小比值PermSize = 21757952 (20.75MB) //对应jvm启动参数-XX:PermSize=<value>:设置JVM堆的‘永生代’的初始大小MaxPermSize = 85983232 (82.0MB)//对应jvm启动参数-XX:MaxPermSize=<value>:设置JVM堆的‘永生代’的最大大小G1HeapRegionSize = 0 (0.0MB) Heap Usage://堆内存使用情况PS Young GenerationEden Space://Eden区内存分布capacity = 33030144 (31.5MB)//Eden区总容量used = 1524040 (1.4534378051757812MB) //Eden区已使用free = 31506104 (30.04656219482422MB) //Eden区剩余容量4.614088270399305% used //Eden区使用比率From Space: //其中一个Survivor区的内存分布capacity = 5242880 (5.0MB)used = 0 (0.0MB)free = 5242880 (5.0MB)0.0% usedTo Space: //另一个Survivor区的内存分布capacity = 5242880 (5.0MB)used = 0 (0.0MB)free = 5242880 (5.0MB)0.0% usedPS Old Generation //当前的Old区内存分布capacity = 86507520 (82.5MB)used = 0 (0.0MB)free = 86507520 (82.5MB)0.0% usedPS Perm Generation//当前的 “永生代” 内存分布capacity = 22020096 (21.0MB)used = 2496528 (2.3808746337890625MB)free = 19523568 (18.619125366210938MB)11.337498256138392% used 670 interned Strings occupying 43720 bytes.可以很清楚的看到Java堆中各个区域目前的情况。</p><h5 id="histo"><a href="#histo" class="headerlink" title="-histo"></a><strong>-histo</strong></h5><p>打印堆的对象统计，包括对象数、内存大小等等 （因为在dump:live前会进行full gc，如果带上live则只统计活对象，因此不加live的堆大小要大于加live堆的大小 ）$ jmap -histo:live 28920 morenum #instances #bytes class name———————————————-1: 83613 12012248 <constMethodKlass>2: 23868 11450280 [B3: 83613 10716064 <methodKlass>4: 76287 10412128 [C5: 8227 9021176 <constantPoolKlass>6: 8227 5830256 <instanceKlassKlass>7: 7031 5156480 <constantPoolCacheKlass>8: 73627 1767048 java.lang.String9: 2260 1348848 <methodDataKlass>10: 8856 849296 java.lang.Class….仅仅打印了前10行xml class name是对象类型，说明如下：B byteC charD doubleF floatI intJ longZ boolean[ 数组，如[I表示int[][L+类名 其他对象</p><h5 id="permstat"><a href="#permstat" class="headerlink" title="-permstat"></a><strong>-permstat</strong></h5><p>打印Java堆内存的永久保存区域的类加载器的智能统计信息。对于每个类加载器而言，它的名称、活跃度、地址、父类加载器、它所加载的类的数量和大小都会被打印。此外，包含的字符串数量和大小也会被打印。$ jmap -permstat 28920Attaching to process ID 28920, please wait…Debugger attached successfully.Server compiler detected.JVM version is 24.71-b01finding class loader instances ..done.computing per loader stat ..done.please wait.. computing liveness.liveness analysis may be inaccurate …class_loader classes bytes parent_loader alive? type<bootstrap> 3111 18154296 null live <internal>0x0000000600905cf8 1 1888 0x0000000600087f08 dead sun/reflect/DelegatingClassLoader@0x00000007800500a00x00000006008fcb48 1 1888 0x0000000600087f08 dead sun/reflect/DelegatingClassLoader@0x00000007800500a00x00000006016db798 0 0 0x00000006008d3fc0 dead java/util/ResourceBundle$RBClassLoader@0x0000000780626ec00x00000006008d6810 1 3056 null dead sun/reflect/DelegatingClassLoader@0x00000007800500a0</p><h5 id="F"><a href="#F" class="headerlink" title="-F"></a><strong>-F</strong></h5><p>强制模式。如果指定的pid没有响应，请使用jmap -dump或jmap -histo选项。此模式下，不支持live子选项。</p><h2 id="jhat"><a href="#jhat" class="headerlink" title="jhat"></a>jhat</h2><p>jhat(JVM Heap Analysis Tool)命令是与jmap搭配使用，用来分析jmap生成的dump，jhat内置了一个微型的HTTP/HTML服务器，生成dump的分析结果后，可以在浏览器中查看。在此要注意，一般不会直接在服务器上进行分析，因为jhat是一个耗时并且耗费硬件资源的过程，一般把服务器生成的dump文件复制到本地或其他机器上进行分析。</p><h3 id="命令格式-3"><a href="#命令格式-3" class="headerlink" title="命令格式"></a>命令格式</h3><p>jhat [dumpfile]</p><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><ul><li>  -stack falsetrue关闭对象分配调用栈跟踪(tracking object allocation call stack)。 如果分配位置信息在堆转储中不可用. 则必须将此标志设置为 false. 默认值为 true.&gt;</li><li>  -refs falsetrue关闭对象引用跟踪(tracking of references to objects)。 默认值为 true. 默认情况下, 返回的指针是指向其他特定对象的对象,如反向链接或输入引用(referrers or incoming references), 会统计/计算堆中的所有对象。&gt;</li><li>  -port port-number设置 jhat HTTP server 的端口号. 默认值 7000.&gt;</li><li>  -exclude exclude-file指定对象查询时需要排除的数据成员列表文件(a file that lists data members that should be excluded from the reachable objects query)。 例如, 如果文件列列出了 java.lang.String.value , 那么当从某个特定对象 Object o 计算可达的对象列表时, 引用路径涉及 java.lang.String.value 的都会被排除。&gt;</li><li>  -baseline exclude-file指定一个基准堆转储(baseline heap dump)。 在两个 heap dumps 中有相同 object ID 的对象会被标记为不是新的(marked as not being new). 其他对象被标记为新的(new). 在比较两个不同的堆转储时很有用.&gt;</li><li>  -debug int设置 debug 级别. 0 表示不输出调试信息。 值越大则表示输出更详细的 debug 信息.&gt;</li><li>  -version启动后只显示版本信息就退出&gt;</li><li>  -J&lt; flag &gt;因为 jhat 命令实际上会启动一个JVM来执行, 通过 -J 可以在启动JVM时传入一些启动参数. 例如, -J-Xmx512m 则指定运行 jhat 的Java虚拟机使用的最大堆内存为 512 MB. 如果需要使用多个JVM启动参数,则传入多个 -Jxxxxxx.</li></ul><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><p>$ jhat -J-Xmx512m dump.hprofeading from dump.hprof…Dump file created Fri Mar 11 17:13:42 CST 2016Snapshot read, resolving…Resolving 271678 objects…Chasing references, expect 54 dots………………………………………………Eliminating duplicate references………………………………………………Snapshot resolved.Started HTTP server on port 7000Server is ready.中间的-J-Xmx512m是在dump快照很大的情况下分配512M内存去启动HTTP服务器，运行完之后就可在浏览器打开Http://localhost:7000进行快照分析堆快照分析主要在最后面的Heap Histogram里，里面根据class列出了dump的时候所有存活对象。分析同样一个dump快照，MAT需要的额外内存比jhat要小的多的多，所以建议使用MAT来进行分析，当然也看个人偏好。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>打开浏览器Http://localhost:7000，该页面提供了几个查询功能可供使用：All classes including platformShow all members of the rootsetShow instance counts for all classes (including platform)Show instance counts for all classes (excluding platform)Show heap histogramShow finalizer summaryExecute Object Query Language (OQL) query一般查看堆异常情况主要看这个两个部分：Show instance counts for all classes (excluding platform)，平台外的所有对象信息。如下图：</p><p><a href="file://C:\Users\ZHAOQI~1\AppData\Local\Temp\enhtmlclip\7f32f8469cc634a9c9a344ee905f9654-41006"></a></p><p> Show heap histogram 以树状图形式展示堆情况。如下图：</p><p><a href="file://C:\Users\ZHAOQI~1\AppData\Local\Temp\enhtmlclip\80be25d2f1c6b019c28d96c42842fac6-117429"></a></p><p> 具体排查时需要结合代码，观察是否大量应该被回收的对象在一直被引用或者是否有占用内存特别大的对象无法被回收。 一般情况，会down到客户端用工具来分析</p><h2 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h2><p>jstack用于生成java虚拟机当前时刻的线程快照。线程快照是当前java虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等。 线程出现停顿的时候通过jstack来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。 如果java程序崩溃生成core文件，jstack工具可以用来获得core文件的java stack和native stack的信息，从而可以轻松地知道java程序是如何崩溃和在程序何处发生问题。另外，jstack工具还可以附属到正在运行的java程序中，看到当时运行的java程序的java stack和native stack的信息, 如果现在运行的java程序呈现hung的状态，jstack是非常有用的。</p><h3 id="命令格式-4"><a href="#命令格式-4" class="headerlink" title="命令格式"></a>命令格式</h3><p>jstack [option] LVMID</p><h3 id="option参数-2"><a href="#option参数-2" class="headerlink" title="option参数"></a>option参数</h3><ul><li>  -F : 当正常输出请求不被响应时，强制输出线程堆栈</li><li>  -l : 除堆栈外，显示关于锁的附加信息</li><li>  -m : 如果调用到本地方法的话，可以显示C/C++的堆栈</li></ul><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><p>$ jstack -l 11494more2016-07-28 13:40:04Full thread dump Java HotSpot(TM) 64-Bit Server VM (24.71-b01 mixed mode): “Attach Listener” daemon prio=10 tid=0x00007febb0002000 nid=0x6b6f waiting on condition [0x0000000000000000]java.lang.Thread.State: RUNNABLE Locked ownable synchronizers:- None “http-bio-8005-exec-2” daemon prio=10 tid=0x00007feb94028000 nid=0x7b8c waiting on condition [0x00007fea8f56e000]java.lang.Thread.State: WAITING (parking)at sun.misc.Unsafe.park(Native Method)- parking to wait for &lt;0x00000000cae09b80&gt; (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)at org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:104)at org.apache.tomcat.util.threads.TaskQueue.take(TaskQueue.java:32)at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)at java.lang.Thread.run(Thread.java:745) Locked ownable synchronizers:- None…..</p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>这里有一篇文章解释的很好<a href="http://www.hollischuang.com/archives/110">分析打印出的文件内容</a></p><h2 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h2><p>jinfo(JVM Configuration info)这个命令作用是实时查看和调整虚拟机运行参数。之前的jps -v口令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就要使用jinfo口令</p><h3 id="命令格式-5"><a href="#命令格式-5" class="headerlink" title="命令格式"></a>命令格式</h3><p>jinfo [option] [args] LVMID</p><h3 id="option参数-3"><a href="#option参数-3" class="headerlink" title="option参数"></a>option参数</h3><ul><li>  -flag : 输出指定args参数的值</li><li>  -flags : 不需要args参数，输出所有JVM参数的值</li><li>  -sysprops : 输出系统属性，等同于System.getProperties()</li></ul><h3 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h3><p>$ jinfo -flag 11494-XX:CMSInitiatingOccupancyFraction=80</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JVM调优-命令大全（jps-jstat-jmap-jhat-jstack-jinfo&quot;&gt;&lt;a href=&quot;#JVM调优-命令大全（jps-jstat-jmap-jhat-jstack-jinfo&quot; class=&quot;headerlink&quot; title=&quot;JVM调优-</summary>
      
    
    
    
    <category term="program" scheme="http://example.com/categories/program/"/>
    
    <category term="JAVA" scheme="http://example.com/categories/program/JAVA/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="调优" scheme="http://example.com/tags/%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
</feed>
